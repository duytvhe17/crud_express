<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Biểu đồ</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>   
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        h1 {
            text-align: center;
            color: red;
        }
        .filter-container {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 20px;
        }
        .filter-container select, .filter-container input, .filter-container button {
            padding: 10px;
            font-size: 14px;
        }
        .filter-container button {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        .filter-container button:hover {
            background-color: #0056b3;
        }
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }
        .action-buttons button {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .back-button {
            background-color: #6c757d;
            color: white;
        }
        .back-button:hover {
            background-color: #5a6268;
        }
        .export-button {
            background-color: #28a745;
            color: white;
        }
        .export-button:hover {
            background-color: #218838;
        }
        canvas {
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <h1>Biểu đồ</h1>
    <div class="filter-container">
        <!-- Dropdown chọn loại biểu đồ -->
        <select id="chartType">
            <option value="">Chọn loại biểu đồ</option>
            <option value="salesByDay">Sản phẩm bán ra theo ngày</option>
            <option value="revenueByMonth">Doanh số sản phẩm theo tháng</option>
            <option value="topProductsByMonth">Sản phẩm được bán nhiều nhất theo tháng</option>
        </select>

        <!-- Dropdown chọn thời gian -->
        <select id="timeRange">
            <option value="today">Hôm nay</option>
            <option value="yesterday">Hôm qua</option>
            <option value="thisWeek">Tuần này</option>
            <option value="lastWeek">Tuần trước</option>
            <option value="thisMonth">Tháng này</option>
            <option value="lastMonth">Tháng trước</option>
            <option value="custom">Tùy chọn</option>
        </select>

        <!-- Nhập thời gian tùy chỉnh -->
        <input type="date" id="startDate" disabled>
        <input type="date" id="endDate" disabled>
        <button onclick="applyFilter()">Áp dụng</button>
    </div>

    <canvas id="chartCanvas" width="800" height="400"></canvas>

    <!-- Nút quay lại và xuất file -->
    <div class="action-buttons">
        <button class="back-button" onclick="goBack()">Quay lại</button>
        
    </div>

    <script>
        let chart;

        // Hiển thị hoặc ẩn trường ngày tùy chỉnh
        document.getElementById('timeRange').addEventListener('change', function () {
            const isCustom = this.value === 'custom';
            document.getElementById('startDate').disabled = !isCustom;
            document.getElementById('endDate').disabled = !isCustom;
        });

        // Hàm tải dữ liệu và hiển thị biểu đồ
        async function loadChart(type, timeRange, startDate, endDate) {
            if (!type) return;

            const response = await fetch(`/charts/data?type=${type}&timeRange=${timeRange}&startDate=${startDate}&endDate=${endDate}`);
            const data = await response.json();

            const ctx = document.getElementById('chartCanvas').getContext('2d');
            if (chart) chart.destroy(); // Xóa biểu đồ cũ trước khi vẽ biểu đồ mới

            chart = new Chart(ctx, {
                type: type === 'salesByDay' || type === 'revenueByMonth' ? 'bar' : 'pie',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: data.label,
                        data: data.values,
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });
        }

        // Hàm áp dụng bộ lọc
        function applyFilter() {
            const type = document.getElementById('chartType').value;
            const timeRange = document.getElementById('timeRange').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            loadChart(type, timeRange, startDate, endDate);
        }

        // Hàm quay lại trang index
        function goBack() {
            window.location.href = '/';
        }

        // Hàm xuất file Excel
        async function exportExcel() {
            const type = document.getElementById('chartType').value;
            const timeRange = document.getElementById('timeRange').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            // Chuyển hướng đến route xuất Excel
            const exportUrl = `/charts/export?type=${type}&timeRange=${timeRange}&startDate=${startDate}&endDate=${endDate}`;
            window.location.href = exportUrl;
        }

        // Tải biểu đồ mặc định
        document.getElementById('chartType').addEventListener('change', () => applyFilter());
    </script>
</body>
</html>
